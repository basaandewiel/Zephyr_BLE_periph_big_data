name: InstallZephyrSDKBuildTwister

on: 
  push:
  pull_request:
  workflow_dispatch:
  schedule:
  - cron: "0 19 * * 1-5"
jobs:
  installZephyrAndBuild:
    runs-on: ubuntu-latest
    steps:
      - name: InstallWestWorkspace
        run: |
          sudo apt update
          sudo apt upgrade
          wget https://apt.kitware.com/kitware-archive.sh
          sudo bash kitware-archive.sh
          sudo apt install --no-install-recommends git cmake ninja-build gperf   ccache dfu-util device-tree-compiler wget   python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file   make gcc gcc-multilib g++-multilib libsdl2-dev
        
          pip3 install west
          
          cd ${{github.workspace}}
          cd ..
          #west init -m https://github.com/nrfconnect/sdk-nrf --mr v2.1.1 /home/runner/work
          west init -m https://github.com/nrfconnect/sdk-nrf /home/runner/work
          cd /home/runner/work
          west update
          pip3 install -r zephyr/scripts/requirements-base.txt
                    
          sudo apt install --no-install-recommends cmake ninja-build
          #source ./zephyr/zephyr-env.sh
          
          #install toolchains
          cd /usr/local/
          # get minimal version, without toolchains
          sudo wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.1/zephyr-sdk-0.15.1_linux-x86_64_minimal.tar.gz
          sudo tar -xvf zephyr-sdk-0.15.1_linux-x86_64_minimal.tar.gz
          
          # install only necessary toolchains
          cd zephyr-sdk-0.15.1
          sudo wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.1/toolchain_linux-x86_64_arm-zephyr-eabi.tar.gz
          sudo tar -xvf toolchain_linux-x86_64_arm-zephyr-eabi.tar.gz
          sudo wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.1/toolchain_linux-x86_64_x86_64-zephyr-elf.tar.gz
          sudo tar -xvf toolchain_linux-x86_64_x86_64-zephyr-elf.tar.gz

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: repototest

      - name: BuildTargets
        working-directory: repototest
        run: |
          export ZEPHYR_TOOLCHAIN_VARIANT=zephyr
          export ZEPHYR_SDK_INSTALL_DIR=/opt/toolchains/zephyr-sdk-0.15.1/
          west build --pristine -b qemu_x86
          #next line gives error 'no module named 'cbor2''
          pip install cbor2
          west build --pristine -b thingy91_nrf9160_ns

          # used for debugging via SSH
      #- name: Setup upterm session
      #  uses: lhotari/action-upterm@v1

      - name: RunTwister
        working-directory: repototest
        run: |
          #pip install tabulate
          pip install ply
          #next line necessary to build for native_posix
          sudo apt install gcc-multilib
          # in sample.yaml is indicated that integration tests will use native_posix
          /home/runner/work/zephyr/scripts/twister -v --integration  -T ./

        
